#include "../include/threadpool.h"
#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#include <unistd.h>

typedef struct {
    int num;
    long long result;
} factorial_arg_t;

void factorial(void *arg) {
    factorial_arg_t *factorial_arg = (factorial_arg_t *)arg;
    int num = factorial_arg->num;
    long long result = 1;
    for (int i = 2; i <= num; i++) {
        result *= i;
    }
    factorial_arg->result = result;
    printf("Factorial of %d is %lld\n", num, result);
}

void test_thread_pool() {
    thread_pool_t *pool = thread_pool_create(4, 10); // 4 threads, 10 queue size

    factorial_arg_t args[10];
    for (int i = 0; i < 10; i++) {
        args[i].num = (i + 1) * 5; // 5, 10, 15, ..., 50
        thread_pool_add_task(pool, factorial, &args[i]);
    }

    // Give some time for tasks to complete
    sleep(2);

    // Verify results
    for (int i = 0; i < 10; i++) {
        long long expected_result = 1;
        for (int j = 2; j <= args[i].num; j++) {
            expected_result *= j;
        }
        assert(args[i].result == expected_result);
        printf("Verified factorial of %d is %lld\n", args[i].num, args[i].result);
    }

    thread_pool_cleanup(pool);
    printf("All tests passed.\n");
}

int main() {
    test_thread_pool();
    return 0;
}


Makefile

# Compiler and flags
CC=gcc
CFLAGS=-g -Wall -Wextra -Wpedantic
LIBS=-pthread

# Directory paths
SRC_DIR=src
INC_DIR=include
TEST_DIR=test
OBJ_DIR=obj

# Source and object files
SRC_FILES=$(wildcard $(SRC_DIR)/*.c)
OBJ_FILES=$(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SRC_FILES))
TEST_SRC=$(TEST_DIR)/test_threadpool.c
TEST_OBJ=$(OBJ_DIR)/test_threadpool.o
BIN_FILE=threadpool
TEST_BIN=test_threadpool

# Default target
all: $(OBJ_DIR) $(BIN_FILE) $(TEST_BIN)

# Build the main application
$(BIN_FILE): $(OBJ_FILES)
	$(CC) $(CFLAGS) $^ -I$(INC_DIR) -o $@ $(LIBS)

# Build the test executable
$(TEST_BIN): $(OBJ_FILES) $(TEST_OBJ)
	$(CC) $(CFLAGS) $^ -I$(INC_DIR) -o $@ $(LIBS)

# Build object files for the main application
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -I$(INC_DIR) -o $@

# Build object files for the test code
$(OBJ_DIR)/test_threadpool.o: $(TEST_SRC)
	$(CC) $(CFLAGS) -c $< -I$(INC_DIR) -o $@

# Create object directory if not exists
$(OBJ_DIR):
	mkdir -p $(OBJ_DIR)

# Clean up
clean:
	rm -rf $(BIN_FILE) $(TEST_BIN) $(OBJ_DIR)


